<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="goods">
    <select id="selectAll" resultType="com.lxx.mybatis.entity.Goods">
        select * from t_goods order by goods_id desc limit 10
    </select>
    <!-- 单参数传递,使用parameterType指定参数的数据类型即可,SQL中#{value}提取参数-->
    <select id="selectById" parameterType="Integer" resultType="com.lxx.mybatis.entity.Goods">
        select * from t_goods where goods_id = #{value}
    </select>
    <!-- 多参数传递时,使用parameterType指定Map接口,SQL中#{key}提取参数 -->
    <select id="selectByPriceRange" parameterType="java.util.Map" resultType="com.lxx.mybatis.entity.Goods">
        select * from t_goods
        where
            current_price between #{min} and #{max}
        order by current_price
        limit 0,#{limit}
    </select>

    <select id="selectGoodsMap" resultType="java.util.LinkedHashMap">
        select g.* , c.category_name, '1' as test from t_goods g, t_category c
        where g.category_id = c.category_id
    </select>

    <resultMap id="rmGoods" type="com.lxx.mybatis.dto.GoodsDTO">
        <id property="goods.goodsId" column="goods_id"></id>
        <result property="goods.title" column="title"></result>
        <result property="goods.originalCost" column="original_cost"></result>
        <result property="goods.currentPrice" column="current_price"></result>
        <result property="goods.discount" column="discount"></result>
        <result property="goods.isFreeDelivery" column="is_free_delivery"></result>
        <result property="category.categoryId" column="category_id"></result>
        <result property="category.categoryName" column="category_name"></result>
        <result property="category.parentId" column="parent_id"></result>
        <result property="category.categoryLevel" column="category_level"></result>
        <result property="category.categoryOrder" column="category_order"></result>
        <result property="test" column="test"></result>
    </resultMap>
    <select id="selectGoodsDTO" resultMap="rmGoods">
        select g.* , c.*, '1' as test from t_goods g, t_category c
        where g.category_id = c.category_id
    </select>

    <insert id="insert"
            parameterType="com.lxx.mybatis.entity.Goods"
            useGeneratedKeys="true"
            keyProperty="goodsId"
            keyColumn="goods_id"
            >
        insert into t_goods(title, sub_title, original_cost, current_price, discount, is_free_delivery, category_id)
        values (#{title}, #{subTitle}, #{originalCost}, #{currentPrice}, #{discount}, #{isFreeDelivery}, #{categoryId})
        <!--<selectKey resultType="Integer" keyProperty="goodsId" order="AFTER">
            select last_insert_id();
        </selectKey>-->
    </insert>

    <update id="update" parameterType="com.lxx.mybatis.entity.Goods">
        update t_goods
        set
            title = #{title},
            sub_title = #{subTitle},
            original_cost = #{originalCost},
            current_price = #{currentPrice},
            discount = #{discount},
            is_free_delivery = #{isFreeDelivery},
            category_id = #{categoryId}
        where
            goods_id = #{goodsId}
    </update>

    <delete id="delete" parameterType="Integer">
        delete from t_goods where goods_id = #{value}
    </delete>

    <select id="selectByTitle" parameterType="java.util.Map" resultType="com.lxx.mybatis.entity.Goods">
        <!--#{value} 预编译传值，可以有效防止 sql 注入攻击
        ${} 文本替换，未经任何处理对 SQL 文本替换，里面的字符串可能会被 被sql执行， 用于复杂场景下的查询
          ，传入的值尽量是写死的，不能是用户自己输入-->
        select * from t_goods where title like concat('%', #{title}, '%') order by ${order}
    </select>

    <select id="dynamicSQL" parameterType="java.util.Map" resultType="com.lxx.mybatis.entity.Goods">
        select * from t_goods
        <where>
            <if test="categoryId != null">
                and category_Id = #{categoryId}
            </if>
            <if test="currentPrice != null">
                and current_price &lt; #{currentPrice}
            </if>
        </where>
    </select>
</mapper>